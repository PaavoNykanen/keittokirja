package keittokirja.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import keittokirja.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.04.24 09:44:47 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class AineTest {



  // Generated by ComTest BEGIN
  /** testRekisteroi63 */
  @Test
  public void testRekisteroi63() {    // Aine: 63
    Aine x = new Aine("kanaa"); 
    Aine y = new Aine("majoneesia"); 
    assertEquals("From: Aine line: 66", 1, x.rekisteroi()); 
    assertEquals("From: Aine line: 67", 2, y.rekisteroi()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString81 */
  @Test
  public void testToString81() {    // Aine: 81
    Aine aine = new Aine(); 
    aine.parse("   3  | Ankka"); 
    assertEquals("From: Aine line: 84", true, aine.toString().startsWith("3|A"));  // on enemmäkin kuin 3 kenttää, siksi loppu |
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse99 */
  @Test
  public void testParse99() {    // Aine: 99
    Aine aine = new Aine(); 
    aine.parse("   3  |  Ankka  "); 
    assertEquals("From: Aine line: 102", 3, aine.getAineenId()); 
    assertEquals("From: Aine line: 103", true, aine.toString().startsWith("3|Ankka"));  // on enemmäkin kuin 3 kenttää, siksi loppu |
    aine.rekisteroi(); 
    int n = aine.getAineenId(); 
    aine.parse(""+(n+20));  // Otetaan merkkijonosta vain tunnusnumero
    aine.rekisteroi();  // ja tarkistetaan että seuraavalla kertaa tulee yhtä isompi
    assertEquals("From: Aine line: 109", n+20+1, aine.getAineenId()); 
  } // Generated by ComTest END
}