package keittokirja.test;
// Generated by ComTest BEGIN
import java.util.ArrayList;
import java.util.Arrays;
import keittokirja.SailoException;
import static org.junit.Assert.*;
import org.junit.*;
import keittokirja.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.04.24 10:26:43 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class LiimatTest {



  // Generated by ComTest BEGIN
  /** testAnnaLiimat72 */
  @Test
  public void testAnnaLiimat72() {    // Liimat: 72
    Liimat liimat = new Liimat(); 
    Liima liima1 = new Liima(1, 1, "500g"); 
    Liima liima2 = new Liima(1, 2, "200g"); 
    Liima liima3 = new Liima(1, 3, "300g"); 
    Liima liima4 = new Liima(2, 5, "400g"); 
    liima1.rekisteroi(); liima2.rekisteroi(); liima3.rekisteroi(); liima4.rekisteroi(); 
    try {
    liimat.lisaaLiima(liima1); 
    liimat.lisaaLiima(liima2); 
    liimat.lisaaLiima(liima3); 
    liimat.lisaaLiima(liima4); 
    } catch (SailoException e) {
    System.err.println(e.getMessage()); 
    }
    int[] t = liimat.annaLiimat(1); 
    assertEquals("From: Liimat line: 91", "[1, 2, 3]", Arrays.toString(t)); 
    Liimat.setLkm(0); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaLiimaMaara149 */
  @Test
  public void testAnnaLiimaMaara149() {    // Liimat: 149
    Liimat liimat = new Liimat(); 
    Liima liima1 = new Liima(1, 1, "500g"); 
    Liima liima2 = new Liima(1, 2, "200g"); 
    Liima liima3 = new Liima(1, 3, "300g"); 
    Liima liima4 = new Liima(2, 5, "400g"); 
    liima1.rekisteroi(); liima2.rekisteroi(); liima3.rekisteroi(); liima4.rekisteroi(); 
    try {
    liimat.lisaaLiima(liima1); 
    liimat.lisaaLiima(liima2); 
    liimat.lisaaLiima(liima3); 
    liimat.lisaaLiima(liima4); 
    } catch (SailoException e) {
    System.err.println(e.getMessage()); 
    }
    ArrayList<String> t = liimat.annaLiimaMaara(1); 
    assertEquals("From: Liimat line: 168", "[500g, 200g, 300g]", t.toString()); 
    Liimat.setLkm(0); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLueTiedosto205 */
  @Test
  public void testLueTiedosto205() {    // Liimat: 205
    Liimat liimat1 = new Liimat(5); 
    Liima lisattava = new Liima(1,1,"500g"); 
    lisattava.rekisteroi(); 
    try {
    liimat1.lisaaLiima(lisattava); 
    } catch (SailoException e) {
    e.printStackTrace(); 
    }
    Liimat.setTiedostoSijainti("tiedostoTestit/liimatTesti.dat"); 
    liimat1.tallenna(); 
    liimat1.lueTiedosto(); 
    assertEquals("From: Liimat line: 217", 9, liimat1.annaLiima(0).getLiimaId());  // Eli tässä liimoja on kaksi samanlaista vaikka luotiin itse vain yksi, sillä talenna tallenti liiman tiedot
    assertEquals("From: Liimat line: 218", 9, liimat1.annaLiima(1).getLiimaId());  // ja lueTiedosto loi niillä uuden liiman.
    try {
    assertEquals("From: Liimat line: 219", 9, liimat1.annaLiima(2).getLiimaId()); 
    fail("Liimat: 219 Did not throw NullPointerException");
    } catch(NullPointerException _e_){ _e_.getMessage(); } //tämä menee yli indexin koska vain kaksi liimaa
    Liimat.setLkm(0); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoistaLiimat267 */
  @Test
  public void testPoistaLiimat267() {    // Liimat: 267
    Liimat liimat = new Liimat(); 
    Liima liima1 = new Liima(1, 1, "500g"); 
    Liima liima2 = new Liima(1, 2, "200g"); 
    Liima liima3 = new Liima(1, 3, "300g"); 
    Liima liima4 = new Liima(2, 5, "400g"); 
    liima1.rekisteroi(); liima2.rekisteroi(); liima3.rekisteroi(); liima4.rekisteroi(); 
    try {
    liimat.lisaaLiima(liima1); 
    liimat.lisaaLiima(liima2); 
    liimat.lisaaLiima(liima3); 
    liimat.lisaaLiima(liima4); 
    } catch (SailoException e) {
    System.err.println(e.getMessage()); 
    }
    liimat.poistaLiimat(1); 
    assertEquals("From: Liimat line: 286", 1, liimat.getLkm()); 
    Liimat.setLkm(0); 
  } // Generated by ComTest END
}